Aug 29,2022
Command-line Environment
https://missing.csail.mit.edu/2020/command-line/

Job control

ctrl c : stop, to send a signal called SIGINT
man signal to see all signal function

ctrl z: stop and show details

nohup sleep 10 &
& is to run this in the backend

jobs: to show the details of all processes

bg %1 : to start the first process again
kill -STOP %3: to kill the third process
kill -HUP %1: to hang up the first job(process)
kill -KILL %1

eg:
$ sleep 1000
^Z
[1]  + 18653 suspended  sleep 1000

$ nohup sleep 2000 &
[2] 18745
appending output to nohup.out

$ jobs
[1]  + suspended  sleep 1000
[2]  - running    nohup sleep 2000

$ bg %1
[1]  - 18653 continued  sleep 1000

$ jobs
[1]  - running    sleep 1000
[2]  + running    nohup sleep 2000

$ kill -STOP %1
[1]  + 18653 suspended (signal)  sleep 1000

$ jobs
[1]  + suspended (signal)  sleep 1000
[2]  - running    nohup sleep 2000

$ kill -SIGHUP %1
[1]  + 18653 hangup     sleep 1000

$ jobs
[2]  + running    nohup sleep 2000

$ kill -SIGHUP %2

$ jobs
[2]  + running    nohup sleep 2000

$ kill %2
[2]  + 18745 terminated  nohup sleep 2000

$ jobs



Sessions Windows Panes

tmux expects you to know its keybindings, and they all have the form   <C-b> x   where that means (1) press Ctrl+b, (2) release Ctrl+b, 
and then (3) press x. tmux has the following hierarchy of objects:

    Sessions - a session is an independent workspace with one or more windows
        tmux starts a new session.
        tmux new -s NAME starts it with that name.
        tmux ls lists the current sessions
        Within tmux typing <C-b> d detaches the current session
        tmux a attaches the last session. You can use -t flag to speccify which
    Windows - Equivalent to tabs in editors or browsers, they are visually separate parts of the same session
        <C-b> c Creates a new window. To close it you can just terminate the shells doing <C-d>
        <C-b> N Go to the N th window. Note they are numbered
        <C-b> p Goes to the previous window
        <C-b> n Goes to the next window
        <C-b> , Rename the current window
        <C-b> w List current windows
    Panes - Like vim splits, panes let you have multiple shells in the same visual display.
        <C-b> " Split the current pane horizontally
        <C-b> % Split the current pane vertically
        <C-b> <direction> Move to the pane in the specified direction. Direction here means arrow keys.
        <C-b> z Toggle zoom for the current pane
        <C-b> [ Start scrollback. You can then press <space> to start a selection and <enter> to copy that selection.
        <C-b> <space> Cycle through pane arrangements.


ctrl d or exit to exit tmux

Tmux 窗口有大量的快捷键。所有快捷键都要通过前缀键唤起。默认的前缀键是Ctrl+b，即先按下Ctrl+b，快捷键才会生效。
举例来说，帮助命令的快捷键是Ctrl+b ?。它的用法是，在 Tmux 窗口中，先按下Ctrl+b，再按下?，就会显示帮助信息。
然后，按下 ESC 键或q键，就可以退出帮助

3.1 新建会话

第一个启动的 Tmux 窗口，编号是0，第二个窗口的编号是1，以此类推。这些窗口对应的会话，就是 0 号会话、1 号会话。

使用编号区分会话，不太直观，更好的方法是为会话起名。


    $ tmux new -s <session-name>

上面命令新建一个指定名称的会话。
3.2 分离会话

在 Tmux 窗口中，按下Ctrl+b d或者输入tmux detach命令，就会将当前会话与窗口分离。

    $ tmux detach

上面命令执行后，就会退出当前 Tmux 窗口，但是会话和里面的进程仍然在后台运行。


tmux ls命令可以查看当前所有的 Tmux 会话。


    $ tmux ls
    # or
    $ tmux list-session

3.3 接入会话

tmux attach命令用于重新接入某个已存在的会话。


    # 使用会话编号
    $ tmux attach -t 0

    # 使用会话名称
    $ tmux attach -t <session-name>

3.4 杀死会话

tmux kill-session命令用于杀死某个会话。


    # 使用会话编号
    $ tmux kill-session -t 0

    # 使用会话名称
    $ tmux kill-session -t <session-name>

3.5 切换会话

tmux switch命令用于切换会话。


    # 使用会话编号
    $ tmux switch -t 0

    # 使用会话名称
    $ tmux switch -t <session-name>

3.6 重命名会话

tmux rename-session命令用于重命名会话。


    $ tmux rename-session -t 0 <new-name>

上面命令将0号会话重命名。
3.7 会话快捷键

下面是一些会话相关的快捷键。

        Ctrl+b d：分离当前会话。
        Ctrl+b s：列出所有会话。
        Ctrl+b $：重命名当前会话。

四、最简操作流程

综上所述，以下是 Tmux 的最简操作流程。

        新建会话tmux new -s my_session。
        在 Tmux 窗口运行所需的程序。
        按下快捷键Ctrl+b d将会话分离。
        下次使用时，重新连接到会话tmux attach-session -t my_session。


Windows tips;

Ctrl+b %：划分左右两个窗格。
Ctrl+b "：划分上下两个窗格。
Ctrl+b <arrow key>：光标切换到其他窗格。<arrow key>是指向要切换到的窗格的方向键，比如切换到下方窗格，就按方向键↓。
Ctrl+b ;：光标切换到上一个窗格。
Ctrl+b o：光标切换到下一个窗格。
Ctrl+b {：当前窗格与上一个窗格交换位置。
Ctrl+b }：当前窗格与下一个窗格交换位置。
Ctrl+b Ctrl+o：所有窗格向前移动一个位置，第一个窗格变成最后一个窗格。
Ctrl+b Alt+o：所有窗格向后移动一个位置，最后一个窗格变成第一个窗格。
Ctrl+b x：关闭当前窗格。
Ctrl+b !：将当前窗格拆分为一个独立窗口。
Ctrl+b z：当前窗格全屏显示，再使用一次会变回原来大小。
Ctrl+b Ctrl+<arrow key>：按箭头方向调整窗格大小。
Ctrl+b q：显示窗格编号。


Alias


# Make shorthands for common flags
alias ll="ls -lh"

# Save a lot of typing for common commands
alias gs="git status"
alias gc="git commit"
alias v="vim"

# Save you from mistyping
alias sl=ls

# Overwrite existing commands for better defaults
alias mv="mv -i"           # -i prompts before overwrite
alias mkdir="mkdir -p"     # -p make parent dirs as needed
alias df="df -h"           # -h prints human readable format

# Alias can be composed
alias la="ls -A"
alias lla="la -l"

# To ignore an alias run it prepended with \
\ls
# Or disable an alias altogether with unalias
unalias la

# To get an alias definition just call it with alias
alias ll
# Will print ll='ls -lh'


SSH

